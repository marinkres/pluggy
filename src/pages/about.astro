---
import aboutImg from "@/assets/about-astro.png";
import PageLayout from "@/layouts/Base.astro";
import { Image } from "astro:assets";
import SocialList from "@/components/SocialList.astro";

const meta = {
	description: "I'm a starter theme for Astro.build",
	title: "About",
};
const cactusTech: { desc: string; href: string; title: string }[] = [
	{
		desc: "Build fast websites, faster.",
		href: "https://astro.build",
		title: "Astro",
	},
	{
		desc: "Rapidly build modern websites without ever leaving your HTML.",
		href: "https://tailwindcss.com",
		title: "Tailwind CSS",
	},
	{
		desc: "Markdown for the component era.",
		href: "https://mdxjs.com/",
		title: "MDX",
	},
	{
		desc: "Generating png Open Graph images for blog posts.",
		href: "https://github.com/vercel/satori",
		title: "Satori",
	},
	{
		desc: "A fully static search library.",
		href: "https://pagefind.app/",
		title: "Pagefind",
	},
	{
		desc: "Highly customisable source code & syntax highlighter.",
		href: "https://expressive-code.com/",
		title: "Expressive Code",
	},
	{
		desc: "Scale & Ship Faster with a Composable Web Architecture.",
		href: "https://netlify.com/",
		title: "Netlify",
	},
	{
		desc: "Distributed version control system.",
		href: "https://git-scm.com/",
		title: "Git",
	},
	{
		desc: "Automatic image compression.",
		href: "https://imgbot.net/",
		title: "ImgBot",
	},
];
---

<PageLayout meta={meta}>
	<div class="space-y-6">
		<h1 class="title">About</h1>
		<p>
			Collection of projects and ramblings of a System Engineering student about <a href="/tags/cybersecurity/" class="tag">Cybersecurity</a>, <a href="/tags/devops/" class="tag">DevOps</a>, <a href="/tags/networks/" class="tag">Networks</a> and more. Explore my journey and insights in these fields. Enjoy your stay. ðŸš€
		</p>
		
	</div>
	<section class="mt-10">
		<h1 class="title">Contact</h1>
		<p class="mt-8">
			Contact me <a
				aria-label="github repository"
				class="cactus-link inline-block"
				href="mailto:marinjurekresic@gmail.com"
                rel="noopener noreferrer"
                target="_blank">here</a
            > via email.
		</p>
		<SocialList />
		<!-- Newsletter Form -->
		<p class="mt-3 ">Subscribe to my <strong>Newsletter:</strong></p>
		<form
		  action="https://send.pageclip.co/vaMmsM5j4HWKNApHPy4uAHNhYm06DCal/Newsletter"
		  class="pageclip-form"
		  method="post"
		>
		  <div class="mb-4 mt-3">
			<label for="email" class="block text-sm font-medium">Email</label>
			<input
			  type="email"
			  name="email"
			  id="email"
			  required
			  class="mt-1 block w-2/3 px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm bg-white dark:bg-gray-700 dark:text-white"
			  />
		  </div>
		  <button
			type="submit"
			class="pageclip-form__submit tag"
		  >
			<span>Subscribe</span>
		  </button>
		</form>
		<p id="confirmation-message" class="mt-3 hidden text-green-500">Thank you for subscribing!</p>
	</section>
	
	<section class="mt-16">
		<h4 class="title mb-4 text-xl">Technologies Used For The Website</h4>
		<dl class="space-y-4">
			{
				cactusTech.map(({ desc, href, title }) => (
					<div class="flex flex-col gap-2 sm:flex-row">
						<dt>
							<span class="flex">
								<a class="cactus-link" href={href} rel="noopener noreferrer" target="_blank">
									{title}
								</a>
								:
							</span>
						</dt>
						<dd>{desc}</dd>
					</div>
				))
			}
		</dl>
	</section>
</PageLayout>
<script src="https://s3.amazonaws.com/pageclip.co/v1/pageclip.js"></script>
<script>
    async function handleFormSubmit(event: Event) {
        event.preventDefault();
        const form = event.target as HTMLFormElement;
        const confirmationMessage = document.getElementById('confirmation-message');

        try {
            const formData = new FormData(form);
            const response = await fetch(form.action, {
                method: form.method,
                body: formData,
                headers: {
                    'Accept': 'application/json'
                }
            });

            if (response.ok) {
                form.reset();
                if (confirmationMessage !== null) {
                    confirmationMessage.classList.remove('hidden');
                }
            } else {
                console.error('Form submission failed:', response.statusText);
            }
        } catch (error) {
            console.error('Form submission error:', error);
        }

        return false;
    }
</script>