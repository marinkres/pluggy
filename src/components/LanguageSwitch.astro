---
import { languages } from '../i18n/utils';

const { pathname } = Astro.url;
const currentPath = pathname.replace(/^\/(jp\/)?/, '/');
---

<div class="language-switch">
  {Object.entries(languages).map(([lang, label]) => {
    const path = lang === 'en' 
      ? currentPath // For English, use path without prefix
      : `/${lang}${currentPath}`; // For other languages, add prefix
    
    return (
      <a 
        href={path}
        class:list={[
          'lang-link',
          { active: lang === 'en' ? !pathname.startsWith('/jp') : pathname.startsWith(`/${lang}`) }
        ]}
      >
        {label}
      </a>
    );
  })}
</div>
<style>
    .language-switch {
      display: flex;
      align-items: center;
      gap: 0.5rem;
      padding: 0.5rem 1rem;
    }
  
    .lang-label {
      font-weight: bold;
    }
  
    .lang-options {
      display: flex;
      align-items: center;
      gap: 0.5rem;
    }
  
    .lang-link {
      text-decoration: none;
      color: inherit;
    }
  
    .lang-link.active {
      font-weight: bold;
    }
  
    .separator {
      color: inherit;
    }
  </style>